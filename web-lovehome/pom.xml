<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.lxd</groupId>
		<artifactId>micro-lxd-service</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>web-lovehome</artifactId>
	<packaging>jar</packaging>
	<version>0.0.3-SNAPSHOT</version>


	<name>web-house Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<description>Demo project for Spring cloud Web</description>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-hystrix</artifactId> 
			</dependency> -->

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-feign</artifactId>
		</dependency>


		<!-- devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现）， 
			实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。 即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的 -->
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId> 
			<optional>true</optional>optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入 
			</dependency> -->


	</dependencies>

	<!-- 用于将应用打成可直接运行的jar（该jar就是用于生产环境中的jar） 值得注意的是，如果没有引用spring-boot-starter-parent做parent， 
		且采用了上述的第二种方式，这里也要做出相应的改动 -->
	<!-- <build> <plugins> <plugin> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-maven-plugin</artifactId> <configuration> <fork>true</fork>如果没有该项配置，肯呢个devtools不会起作用，即应用不会restart 
		</configuration> </plugin> </plugins> </build> -->


</project>
